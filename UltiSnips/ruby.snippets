#################################################################
#
# DESCRIPTION:	ruby and rails snippet.
#
# TODO: 
#
#	-	Cucumber
#	-	Gemfile
#	-	ERB
#	-	Foreigner
#	-	Misc
#
#################################################################

##
# Python import functions
##
global !p
from snippet_helper import className
endglobal

#################################################################
# Misc
#################################################################

##
# class
# classname name must be constructed with file_name becoming FileName
# see .vim/pythonx/snippet_helper.py
##

# simple class
snippet cl "class ... end"
class ${1:`!p snip.rv = className(snip.basename)`}
	${0}
end
endsnippet

# class with inheritance
snippet clin "class < Inheritance ... end"
class ${1:`!p snip.rv = className(snip.basename)`} < ${2:inheritance}
  ${0}
end
endsnippet

snippet mod "module"
module `!p snip.rv = className(os.path.basename(os.path.realpath('.')))`
  class ${1:`!p snip.rv = className(snip.basename)`} ${2:inheritance}
    ${0}
  end
end
endsnippet

snippet self "def self. ... end"
def self.${1:methodName}(${2:Attibutes})
  ${0}
end
endsnippet

snippet '
'${1:pattern}'
endsnippet

snippet auto
autoload :${1:ClassName}, '`!p snip.rv = os.path.basename(os.path.realpath('.'))`/${2:file_name}'
endsnippet

snippet giv
Given(/^${1:regexp}$/) do
	${2:pendig}
end
endsnippet

#################################################################
# Rspec
#################################################################

snippet ae "assert_equal"
assert_equal '${1:expected}', ${2:actual}
endsnippet

snippet accessor
attr_accessor(${1:accessors})${0}
endsnippet

#################################################################
# Simple test
#################################################################
snippet test "test"
test '${1:sampleTest}' do
  ${0}
end
endsnippet

#####################################################
#			For cucumber							#
#####################################################

##
# Given, When, Then with regular expression formating
##

snippet givenr 
Given /^${1:regexp}$/ do |input|
	${3:pending}
end
endsnippet

snippet whenr
When(/^${1:regexp}$/) do ${2:|i|}
	${3:pending}
end
endsnippet

snippet thenr
Then(/^${1:regexp}$/) do ${2:|i|}
	${3:pending}
end
endsnippet

##
# Given, When and Then only
##

snippet when
When ${1}
endsnippet

snippet given
Given ${1}
endsnippet

snippet then
Then ${1}
endsnippet

#################################################################
# stuff for gemfile
#################################################################
snippet simf "simple-form"
gem 'simple_form'
endsnippet

snippet devise "devise"
gem 'devise'
endsnippet

snippet foreign "foreigner"
gem 'foreigner'
endsnippet

snippet fig "figaro"
gem 'figaro'
endsnippet

snippet bootstrap "Bootstrap"
gem 'bootstrap-sass', '3.2.0'
endsnippet

snippet rspec "rspec"
gem 'rspec-rails'
endsnippet

#################################################################
# Foreigner
#################################################################

snippet addfk "add foreign key"
add_foreign_key
	${1:fromTable},
	${2:toTable},
	${3:options}
endsnippet

snippet remfk "remove foreign key"
remove_foreign_key
	${1:fromTable},
	${2:toTable},
	${3:options}
endsnippet

#################################################################
# Misc  
#################################################################

snippet /
/${1:regex}/
endsnippet

snippet ^
/^${0}/
endsnippet

snippet $
/${0}$/
endsnippet

snippet ^$
/^${0}$/
endsnippet
